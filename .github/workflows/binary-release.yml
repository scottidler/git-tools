name: binary-release

on:
  push:
    tags:
      - 'v*'

env:
  RUST_VERSION: 1.83.0
  CARGO_TERM_COLOR: always

jobs:
  build-and-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: linux
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set GIT_DESCRIBE environment variable
        run: |
          GIT_DESCRIBE=$(git describe --tags --dirty --always)
          echo "GIT_DESCRIBE=$GIT_DESCRIBE" >> $GITHUB_ENV

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain ${{ env.RUST_VERSION }}
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          rustup target add ${{ matrix.target }}

      - name: Build and package all subprojects
        run: |
          mkdir -p artifacts/
          for project in clone filter-ref ls-github-repos reposlug stale-branches; do
            echo "Building $project..."
            cargo build --release --manifest-path "$project/Cargo.toml" --target ${{ matrix.target }}
            cp target/${{ matrix.target }}/release/$project artifacts/
          done
          # Include shell-functions.sh in the artifacts
          cp shell-functions.sh artifacts/

      - name: Archive artifacts
        run: |
          tar -czvf git-tools-${{ github.ref_name }}-${{ matrix.suffix }}.tar.gz -C artifacts .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: git-tools-${{ matrix.suffix }}
          path: git-tools-${{ github.ref_name }}-${{ matrix.suffix }}.*

  create-release:
    needs: build-and-package
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: 'artifacts/**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
